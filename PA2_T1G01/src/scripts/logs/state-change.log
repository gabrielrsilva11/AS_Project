[2020-04-20 02:24:37,859] TRACE [Controller id=0 epoch=10] Changed partition AlarmTopic-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-20 02:24:37,861] TRACE [Controller id=0 epoch=10] Changed partition AlarmTopic-0 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2020-04-20 02:24:37,861] TRACE [Controller id=0 epoch=10] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='AlarmTopic', partitionIndex=0, controllerEpoch=10, leader=-2, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[0]) to brokers Set(0) for partition AlarmTopic-0 (state.change.logger)
[2020-04-20 02:24:37,864] ERROR [Controller id=0 epoch=10] Controller 0 epoch 10 initiated state change of replica 0 for partition AlarmTopic-0 from OnlineReplica to ReplicaDeletionIneligible failed (state.change.logger)
java.lang.IllegalStateException: Replica [Topic=AlarmTopic,Partition=0,Replica=0] should be in the OfflineReplica,ReplicaDeletionStarted states before moving to ReplicaDeletionIneligible state. Instead it is in OnlineReplica state
	at kafka.controller.ZkReplicaStateMachine.logInvalidTransition(ReplicaStateMachine.scala:426)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$doHandleStateChanges$2(ReplicaStateMachine.scala:161)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$doHandleStateChanges$2$adapted(ReplicaStateMachine.scala:161)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.controller.ZkReplicaStateMachine.doHandleStateChanges(ReplicaStateMachine.scala:161)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$handleStateChanges$2(ReplicaStateMachine.scala:111)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$handleStateChanges$2$adapted(ReplicaStateMachine.scala:110)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:128)
	at kafka.controller.ZkReplicaStateMachine.handleStateChanges(ReplicaStateMachine.scala:110)
	at kafka.controller.TopicDeletionManager.$anonfun$startReplicaDeletion$2(TopicDeletionManager.scala:301)
	at kafka.controller.TopicDeletionManager.$anonfun$startReplicaDeletion$2$adapted(TopicDeletionManager.scala:295)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.MapLike$DefaultKeySet.foreach(MapLike.scala:181)
	at kafka.controller.TopicDeletionManager.startReplicaDeletion(TopicDeletionManager.scala:295)
	at kafka.controller.TopicDeletionManager.onPartitionDeletion(TopicDeletionManager.scala:327)
	at kafka.controller.TopicDeletionManager.$anonfun$onTopicDeletion$4(TopicDeletionManager.scala:274)
	at kafka.controller.TopicDeletionManager.$anonfun$onTopicDeletion$4$adapted(TopicDeletionManager.scala:273)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:97)
	at kafka.controller.TopicDeletionManager.onTopicDeletion(TopicDeletionManager.scala:273)
	at kafka.controller.TopicDeletionManager.$anonfun$resumeDeletions$2(TopicDeletionManager.scala:354)
	at kafka.controller.TopicDeletionManager.$anonfun$resumeDeletions$2$adapted(TopicDeletionManager.scala:335)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:97)
	at kafka.controller.TopicDeletionManager.resumeDeletions(TopicDeletionManager.scala:335)
	at kafka.controller.TopicDeletionManager.enqueueTopicsForDeletion(TopicDeletionManager.scala:123)
	at kafka.controller.KafkaController.processTopicDeletion(KafkaController.scala:1571)
	at kafka.controller.KafkaController.process(KafkaController.scala:1896)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-20 02:24:37,868] TRACE [Controller id=0 epoch=10] Changed partition BatchTopic-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-20 02:24:37,869] TRACE [Controller id=0 epoch=10] Changed partition BatchTopic-0 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2020-04-20 02:24:37,869] TRACE [Controller id=0 epoch=10] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='BatchTopic', partitionIndex=0, controllerEpoch=10, leader=-2, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[0]) to brokers Set(0) for partition BatchTopic-0 (state.change.logger)
[2020-04-20 02:24:37,869] ERROR [Controller id=0 epoch=10] Controller 0 epoch 10 initiated state change of replica 0 for partition BatchTopic-0 from OnlineReplica to ReplicaDeletionIneligible failed (state.change.logger)
java.lang.IllegalStateException: Replica [Topic=BatchTopic,Partition=0,Replica=0] should be in the OfflineReplica,ReplicaDeletionStarted states before moving to ReplicaDeletionIneligible state. Instead it is in OnlineReplica state
	at kafka.controller.ZkReplicaStateMachine.logInvalidTransition(ReplicaStateMachine.scala:426)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$doHandleStateChanges$2(ReplicaStateMachine.scala:161)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$doHandleStateChanges$2$adapted(ReplicaStateMachine.scala:161)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.controller.ZkReplicaStateMachine.doHandleStateChanges(ReplicaStateMachine.scala:161)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$handleStateChanges$2(ReplicaStateMachine.scala:111)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$handleStateChanges$2$adapted(ReplicaStateMachine.scala:110)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:128)
	at kafka.controller.ZkReplicaStateMachine.handleStateChanges(ReplicaStateMachine.scala:110)
	at kafka.controller.TopicDeletionManager.$anonfun$startReplicaDeletion$2(TopicDeletionManager.scala:301)
	at kafka.controller.TopicDeletionManager.$anonfun$startReplicaDeletion$2$adapted(TopicDeletionManager.scala:295)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.MapLike$DefaultKeySet.foreach(MapLike.scala:181)
	at kafka.controller.TopicDeletionManager.startReplicaDeletion(TopicDeletionManager.scala:295)
	at kafka.controller.TopicDeletionManager.onPartitionDeletion(TopicDeletionManager.scala:327)
	at kafka.controller.TopicDeletionManager.$anonfun$onTopicDeletion$4(TopicDeletionManager.scala:274)
	at kafka.controller.TopicDeletionManager.$anonfun$onTopicDeletion$4$adapted(TopicDeletionManager.scala:273)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:97)
	at kafka.controller.TopicDeletionManager.onTopicDeletion(TopicDeletionManager.scala:273)
	at kafka.controller.TopicDeletionManager.$anonfun$resumeDeletions$2(TopicDeletionManager.scala:354)
	at kafka.controller.TopicDeletionManager.$anonfun$resumeDeletions$2$adapted(TopicDeletionManager.scala:335)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:169)
	at kafka.controller.TopicDeletionManager.resumeDeletions(TopicDeletionManager.scala:335)
	at kafka.controller.TopicDeletionManager.enqueueTopicsForDeletion(TopicDeletionManager.scala:123)
	at kafka.controller.KafkaController.processTopicDeletion(KafkaController.scala:1571)
	at kafka.controller.KafkaController.process(KafkaController.scala:1896)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2020-04-20 02:24:37,870] TRACE [Controller id=0 epoch=10] Changed partition ReportTopic-0 state from OnlinePartition to OfflinePartition (state.change.logger)
[2020-04-20 02:24:37,870] TRACE [Controller id=0 epoch=10] Changed partition ReportTopic-0 state from OfflinePartition to NonExistentPartition (state.change.logger)
[2020-04-20 02:24:37,870] TRACE [Controller id=0 epoch=10] Sending UpdateMetadata request UpdateMetadataPartitionState(topicName='ReportTopic', partitionIndex=0, controllerEpoch=10, leader=-2, leaderEpoch=0, isr=[0], zkVersion=0, replicas=[0], offlineReplicas=[0]) to brokers Set(0) for partition ReportTopic-0 (state.change.logger)
[2020-04-20 02:24:37,870] ERROR [Controller id=0 epoch=10] Controller 0 epoch 10 initiated state change of replica 0 for partition ReportTopic-0 from OnlineReplica to ReplicaDeletionIneligible failed (state.change.logger)
java.lang.IllegalStateException: Replica [Topic=ReportTopic,Partition=0,Replica=0] should be in the OfflineReplica,ReplicaDeletionStarted states before moving to ReplicaDeletionIneligible state. Instead it is in OnlineReplica state
	at kafka.controller.ZkReplicaStateMachine.logInvalidTransition(ReplicaStateMachine.scala:426)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$doHandleStateChanges$2(ReplicaStateMachine.scala:161)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$doHandleStateChanges$2$adapted(ReplicaStateMachine.scala:161)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at kafka.controller.ZkReplicaStateMachine.doHandleStateChanges(ReplicaStateMachine.scala:161)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$handleStateChanges$2(ReplicaStateMachine.scala:111)
	at kafka.controller.ZkReplicaStateMachine.$anonfun$handleStateChanges$2$adapted(ReplicaStateMachine.scala:110)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:128)
	at kafka.controller.ZkReplicaStateMachine.handleStateChanges(ReplicaStateMachine.scala:110)
	at kafka.controller.TopicDeletionManager.$anonfun$startReplicaDeletion$2(TopicDeletionManager.scala:301)
	at kafka.controller.TopicDeletionManager.$anonfun$startReplicaDeletion$2$adapted(TopicDeletionManager.scala:295)
	at scala.collection.Iterator.foreach(Iterator.scala:941)
	at scala.collection.Iterator.foreach$(Iterator.scala:941)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1429)
	at scala.collection.MapLike$DefaultKeySet.foreach(MapLike.scala:181)
	at kafka.controller.TopicDeletionManager.startReplicaDeletion(TopicDeletionManager.scala:295)
	at kafka.controller.TopicDeletionManager.onPartitionDeletion(TopicDeletionManager.scala:327)
	at kafka.controller.TopicDeletionManager.$anonfun$onTopicDeletion$4(TopicDeletionManager.scala:274)
	at kafka.controller.TopicDeletionManager.$anonfun$onTopicDeletion$4$adapted(TopicDeletionManager.scala:273)
	at scala.collection.immutable.Set$Set1.foreach(Set.scala:97)
	at kafka.controller.TopicDeletionManager.onTopicDeletion(TopicDeletionManager.scala:273)
	at kafka.controller.TopicDeletionManager.$anonfun$resumeDeletions$2(TopicDeletionManager.scala:354)
	at kafka.controller.TopicDeletionManager.$anonfun$resumeDeletions$2$adapted(TopicDeletionManager.scala:335)
	at scala.collection.immutable.Set$Set3.foreach(Set.scala:169)
	at kafka.controller.TopicDeletionManager.resumeDeletions(TopicDeletionManager.scala:335)
	at kafka.controller.TopicDeletionManager.enqueueTopicsForDeletion(TopicDeletionManager.scala:123)
	at kafka.controller.KafkaController.processTopicDeletion(KafkaController.scala:1571)
	at kafka.controller.KafkaController.process(KafkaController.scala:1896)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:137)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:137)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
